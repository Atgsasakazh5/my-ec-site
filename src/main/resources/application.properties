spring.application.name=my-ec-site
# ===============================================================
# DATASOURCE (MySQL)
# ===============================================================
# DBのURL
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
# 使用するJDBCドライバのクラス名
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# ===============================================================
# CONNECTION POOL (HikariCP)
# ===============================================================
# アイドル状態の接続をプールに保持する最大数
spring.datasource.hikari.maximum-pool-size=10
# プール内の接続の最小数
spring.datasource.hikari.minimum-idle=5
# アイドル接続がプールから削除されるまでの時間 (ミリ秒)
spring.datasource.hikari.idle-timeout=30000
# ===============================================================
# SQL SCRIPT INITIALIZATION
# ===============================================================
# SQLスクリプト(data.sql等)を常に実行する
spring.sql.init.mode=always
spring.jpa.hibernate.ddl-auto=none
# ===============================================================
# JWT
# ===============================================================
# JWTの秘密鍵
app.jwtSecret=${APP_JWT_SECRET}
# JWTの有効期限
app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}
# Stripe決済後の戻り先URL
stripe.api.secret-key=${STRIPE_API_KEY}
app.stripe.return-url=${STRIPE_RETURN_URL}
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USERNAME}
spring.mail.password=${GMAIL_APP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# フロントエンドのベースURLを環境変数から取得
app.frontend.baseUrl=${FRONTEND_BASE_URL:http://localhost:3000}
app.backend.baseUrl=${BACKEND_BASE_URL:http://localhost:8080}
admin.email=${ADMIN_EMAIL}
admin.password=${ADMIN_PASSWORD}
